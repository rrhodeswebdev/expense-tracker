<section class="flex flex-col justify-center h-full gap-y-4">
  <h1 class="text-4xl font-bold text-center">Expense Tracker</h1>
  <div class="container flex flex-col gap-y-4">
    <div class="flex justify-between items-center w-full">
      <h2 class="text-2xl font-bold">Categories</h2>
      <button
        phx-click="toggle_form"
        class="px-4 py-2 bg-black rounded-lg hover:bg-gray-900 text-white min-w-[125px]"
      >
        {if @show_form, do: "Cancel", else: "Add Category"}
      </button>
    </div>

    <div
      :if={@show_form}
      class="overflow-hidden animate-in slide-in-from-top-2 fade-in duration-300"
    >
      <div class="p-4 border rounded-lg bg-gray-50">
        <h3 class="text-lg font-semibold mb-4">Create Category</h3>
        <form class="flex flex-col gap-y-4">
          <div class="flex flex-col gap-y-2">
            <label class="text-sm">Name</label>
            <input type="text" class="rounded border-gray-300" />
          </div>
          <div class="flex flex-col gap-y-2">
            <label class="text-sm">Description</label>
            <input type="text" class="rounded border-gray-300" />
          </div>
          <div class="flex flex-col gap-y-2">
            <label class="text-sm">Monthly Budget</label>
            <input type="number" class="rounded border-gray-300" />
          </div>
          <div class="flex justify-end gap-y-2">
            <button
              type="submit"
              class="px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-700 text-white min-w-[125px]"
            >
              Create
            </button>
          </div>
        </form>
      </div>
    </div>

    <div class="space-y-3">
      <div
        :for={category <- Expensetracker.Categories.list_categories()}
        class="border rounded-lg bg-white"
      >
        <div
          phx-click="toggle_category"
          phx-value-id={category.id}
          class="p-3 cursor-pointer hover:bg-gray-50"
        >
          <div class="flex justify-between items-start">
            <div class="flex items-center gap-2">
              <.icon
                name={
                  if MapSet.member?(@expanded_categories, category.id),
                    do: "hero-chevron-down",
                    else: "hero-chevron-right"
                }
                class="h-5 w-5 text-gray-400"
              />
              <div>
                <h4 class="font-semibold text-gray-900">{category.name}</h4>
                <p class="text-sm text-gray-600">{category.description}</p>
              </div>
            </div>
            <div class="text-right">
              <span class="text-lg font-medium">${category.monthly_budget}</span>
              <p class="text-xs text-gray-500">monthly budget</p>
            </div>
          </div>
        </div>

        <div
          :if={MapSet.member?(@expanded_categories, category.id)}
          class="border-t bg-gray-50 p-3"
        >
          <h5 class="font-medium text-gray-700 mb-2">Expenses</h5>
          <div class="space-y-2">
            <div
              :for={
                expense <-
                  Expensetracker.Expenses.list_expenses()
                  |> Enum.filter(&(&1.category_id == category.id))
              }
              class="flex justify-between text-sm"
            >
              <span>{expense.description}</span>
              <span class="font-medium">${expense.amount}</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-8">
      <div class="flex justify-between items-center w-full mb-4">
        <h2 class="text-2xl font-bold">Recent Expenses</h2>
        <button
          phx-click="toggle_expense_form"
          class="px-4 py-2 bg-black rounded-lg hover:bg-gray-900 text-white min-w-[125px]"
        >
          {if @show_expense_form, do: "Cancel", else: "Add Expense"}
        </button>
      </div>

      <div
        :if={@show_expense_form}
        class="overflow-hidden animate-in slide-in-from-top-2 fade-in duration-300 mb-4"
      >
        <div class="p-4 border rounded-lg bg-gray-50">
          <h3 class="text-lg font-semibold mb-4">Add Expense</h3>
          <form class="flex flex-col gap-y-4">
            <div class="flex flex-col gap-y-2">
              <label class="text-sm">Description</label>
              <input type="text" class="rounded border-gray-300" />
            </div>
            <div class="flex flex-col gap-y-2">
              <label class="text-sm">Amount</label>
              <input type="number" step="0.01" class="rounded border-gray-300" />
            </div>
            <div class="flex flex-col gap-y-2">
              <label class="text-sm">Category</label>
              <select class="rounded border-gray-300">
                <option value="">Select a category</option>
                <option
                  :for={category <- Expensetracker.Categories.list_categories()}
                  value={category.id}
                >
                  {category.name}
                </option>
              </select>
            </div>
            <div class="flex flex-col gap-y-2">
              <label class="text-sm">Date</label>
              <input type="date" class="rounded border-gray-300" />
            </div>
            <div class="flex flex-col gap-y-2">
              <label class="text-sm">Notes (optional)</label>
              <textarea
                class="rounded border-gray-300"
                rows="3"
                placeholder="Add any additional notes..."
              ></textarea>
            </div>
            <div class="flex justify-end">
              <button
                type="submit"
                class="px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-700 text-white min-w-[125px]"
              >
                Add Expense
              </button>
            </div>
          </form>
        </div>
      </div>

      <.table
        id="expenses"
        rows={Expensetracker.Expenses.list_expenses() |> Enum.sort_by(& &1.date, {:desc, Date})}
      >
        <:col :let={expense} label="Description">{expense.description}</:col>
        <:col :let={expense} label="Amount">${expense.amount}</:col>
        <:col :let={expense} label="Category">
          {Expensetracker.Categories.list_categories()
          |> Enum.find(&(&1.id == expense.category_id))
          |> then(&(&1 && &1.name))}
        </:col>
        <:col :let={expense} label="Date">{expense.date}</:col>
        <:col :let={expense} label="Notes">{expense.notes}</:col>
      </.table>
    </div>
  </div>
</section>
