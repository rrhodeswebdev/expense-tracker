<section class="flex flex-col justify-center h-full gap-y-4">
  <h1 class="text-4xl font-bold text-center">Expense Tracker</h1>
  <div class="container flex flex-col gap-y-4">
    <div class="flex justify-between items-center w-full">
      <h2 class="text-2xl font-bold">Categories</h2>
      <.button
        phx-click="toggle_form"
        class="px-4 py-2 bg-black rounded-lg hover:bg-gray-900 text-white min-w-[125px]"
      >
        {if @show_form, do: "Cancel", else: "Add Category"}
      </.button>
    </div>

    <div
      :if={@show_form}
      class="overflow-hidden animate-in slide-in-from-top-2 fade-in duration-300"
    >
      <div class="p-4 border rounded-lg bg-gray-50">
        <h3 class="text-lg font-semibold">Create Category</h3>
        <.simple_form
          for={@category_form}
          class="flex flex-col gap-y-4"
          phx-submit="create_category"
          phx-change="validate_category"
        >
          <.input
            field={@category_form[:name]}
            class="rounded border-gray-300"
            label="Name"
            phx-debounce="blur"
          />
          <.input
            field={@category_form[:description]}
            class="rounded border-gray-300"
            label="Description"
            phx-debounce="blur"
          />
          <.input
            field={@category_form[:monthly_budget]}
            class="rounded border-gray-300"
            type="number"
            label="Monthly Budget"
            phx-debounce="blur"
          />
          <:actions>
            <.button
              type="submit"
              class="px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-700 text-white min-w-[125px]"
              phx-disable-with="Creating..."
            >
              Create
            </.button>
          </:actions>
        </.simple_form>
      </div>
    </div>

    <div class="space-y-3">
      <div :for={category <- @categories} class="border rounded-lg bg-white">
        <div
          phx-click="toggle_category"
          phx-value-id={category.id}
          class="p-3 cursor-pointer hover:bg-gray-50"
        >
          <div class="flex justify-between items-start">
            <div class="flex items-center gap-2">
              <.icon
                name={
                  if MapSet.member?(@expanded_categories, category.id),
                    do: "hero-chevron-down",
                    else: "hero-chevron-right"
                }
                class="h-5 w-5 text-gray-400"
              />
              <div>
                <h4 class="font-semibold text-gray-900">{category.name}</h4>
                <p class="text-sm text-gray-600">{category.description}</p>
              </div>
            </div>
            <div class="text-right min-w-[200px]">
              <div class="flex items-center gap-2 mb-1">
                <span class={[
                  "text-lg font-medium",
                  if(
                    Decimal.compare(
                      category.total_expenses || Decimal.new(0),
                      category.monthly_budget
                    ) == :gt,
                    do: "text-red-600",
                    else: "text-green-600"
                  )
                ]}>
                  ${category.total_expenses || Decimal.new(0)}
                </span>
                <span class="text-gray-400">/</span>
                <span class="text-lg font-medium text-gray-700">${category.monthly_budget}</span>
              </div>
              <div class="w-full bg-gray-200 rounded-full h-2 mb-1">
                <div
                  class={[
                    "h-2 rounded-full transition-all duration-300",
                    if(
                      Decimal.compare(
                        category.total_expenses || Decimal.new(0),
                        category.monthly_budget
                      ) == :gt,
                      do: "bg-red-500",
                      else: "bg-green-500"
                    )
                  ]}
                  style={"width: #{min(Decimal.to_float(Decimal.div(category.total_expenses || Decimal.new(0), category.monthly_budget)) * 100, 100)}%"}
                >
                </div>
              </div>
              <p class="text-xs text-gray-500">
                {Float.round(
                  Decimal.to_float(
                    Decimal.div(
                      category.total_expenses || Decimal.new(0),
                      category.monthly_budget
                    )
                  ) * 100,
                  1
                )}% used
              </p>
            </div>
          </div>
        </div>

        <div
          :if={MapSet.member?(@expanded_categories, category.id)}
          class="border-t bg-gray-50 p-3"
        >
          <h5 class="font-medium text-gray-700 mb-2">Expenses</h5>
          <div class="space-y-2">
            <div
              :for={
                expense <-
                  @expenses
                  |> Enum.filter(&(&1.category_id == category.id))
              }
              class="flex justify-between text-sm"
            >
              <span>{expense.description}</span>
              <span class="font-medium">${expense.amount}</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="mt-8">
      <div class="flex justify-between items-center w-full mb-4">
        <h2 class="text-2xl font-bold">Recent Expenses</h2>
        <.button
          phx-click="toggle_expense_form"
          class="px-4 py-2 bg-black rounded-lg hover:bg-gray-900 text-white min-w-[125px]"
        >
          {if @show_expense_form, do: "Cancel", else: "Add Expense"}
        </.button>
      </div>

      <div
        :if={@show_expense_form}
        class="overflow-hidden animate-in slide-in-from-top-2 fade-in duration-300 mb-4"
      >
        <div class="p-4 border rounded-lg bg-gray-50">
          <h3 class="text-lg font-semibold mb-4">Add Expense</h3>
          <.simple_form
            for={@expense_form}
            class="flex flex-col gap-y-4"
            phx-submit="create_expense"
            phx-change="validate_expense"
          >
            <.input
              field={@expense_form[:description]}
              class="rounded border-gray-300"
              label="Description"
              phx-debounce="blur"
            />
            <.input
              field={@expense_form[:amount]}
              class="rounded border-gray-300"
              type="number"
              label="Amount"
              phx-debounce="blur"
            />
            <.input
              field={@expense_form[:category_id]}
              class="rounded border-gray-300"
              type="select"
              label="Category"
              options={@category_options}
              prompt="Select a category"
              phx-debounce="blur"
            />
            <.input
              field={@expense_form[:date]}
              class="rounded border-gray-300"
              type="date"
              label="Date"
              phx-debounce="blur"
            />
            <.input
              field={@expense_form[:notes]}
              class="rounded border-gray-300"
              type="textarea"
              label="Notes (optional)"
              phx-debounce="blur"
            />
            <:actions>
              <.button
                type="submit"
                class="px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-700 text-white min-w-[125px]"
                phx-disable-with="Creating..."
              >
                Add Expense
              </.button>
            </:actions>
          </.simple_form>
        </div>
      </div>

      <.table id="expenses" rows={@expenses |> Enum.sort_by(& &1.date, {:desc, Date})}>
        <:col :let={expense} label="Description">{expense.description}</:col>
        <:col :let={expense} label="Amount">${expense.amount}</:col>
        <:col :let={expense} label="Category">
          {@categories
          |> Enum.find(&(&1.id == expense.category_id))
          |> then(&(&1 && &1.name))}
        </:col>
        <:col :let={expense} label="Date">{expense.date}</:col>
        <:col :let={expense} label="Notes">{expense.notes}</:col>
      </.table>
    </div>
  </div>
</section>
